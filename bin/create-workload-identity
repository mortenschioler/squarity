#!/bin/bash
set -e # Exit if a command fails 
set -x # Print commands to stoud as they are executed
githubOrg='mortenschioler'
repoName='squarity'

# Create app Managed Identity
applicationRegistrationDetails="$(az ad app create --display-name 'squarity' -o tsv --query '[id, appId]')"
applicationRegistrationObjectId=$(echo $applicationRegistrationDetails | cut -f1 -d' ')
applicationRegistrationAppId=$(echo $applicationRegistrationDetails | cut -f2 -d' ')

# Create an Federated Credential associated with the new workload Managed Identity
az ad app federated-credential create \
	--id $applicationRegistrationObjectId \
	--parameters "{\"name\":\"${repoName}-workflow\",\"issuer\":\"https://token.actions.githubusercontent.com\",\"subject\":\"repo:${githubOrg}/${repoName}:ref:refs/heads/main\",\"audiences\":[\"api://AzureADTokenExchange\"]}"


# Create a resource group for the squarity app and authorize the app identity
resourceGroupName=squarity
location=northeurope
resourceGroupId=$(az group create --name $resourceGroupName --location $location --query id --output tsv)

# Create Service Principle on the workload identity
az ad sp create --id $applicationRegistrationObjectId

# Authorize the workload identity to the resource group
az role assignment create \
	--assignee $applicationRegistrationAppId \
	--role Contributor \
	--scope $resourceGroupId

echo "AZURE_CLIENT_ID: $applicationRegistrationAppId"
echo "AZURE_TENANT_ID: $(az account show --query tenantId --output tsv)"
echo "AZURE_SUBSCRIPTION_ID: $(az account show --query id --output tsv)"
